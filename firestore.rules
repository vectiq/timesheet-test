rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUserDoc(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return exists(/databases/$(database)/documents/members/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/members/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isPending() {
      return exists(/databases/$(database)/documents/members/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/members/$(request.auth.uid)).data.status == 'pending';
    }

    // Members collection
    match /members/{userId} {
      allow read: if isUserDoc(userId) || isAdmin();
      allow create: if isUserDoc(userId) && 
                   request.resource.data.role == 'consultant' && 
                   request.resource.data.status == 'pending';
      allow update: if (isUserDoc(userId) && 
                      request.resource.data.role == resource.data.role &&
                      request.resource.data.status == resource.data.status) || 
                   isAdmin();
    }

    // Projects collection
    match /projects/{projectId} {
      allow read: if isAuthenticated() && !isPending();
      allow write: if isAdmin();
      
      // Project roles subcollection
      match /roles/{roleId} {
        allow read: if isAuthenticated() && !isPending();
        allow write: if isAdmin();
      }
    }

    // Time entries collection
    match /timeEntries/{entryId} {
      allow read: if isAuthenticated() && 
                 (request.auth.uid == resource.data.userId || isAdmin());
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid &&
                   !isPending();
      allow update: if isAuthenticated() &&
                   (request.auth.uid == resource.data.userId || isAdmin()) &&
                   !isPending();
      allow delete: if isAdmin();
    }

    // Clients collection
    match /clients/{clientId} {
      allow read: if isAuthenticated() && !isPending();
      allow write: if isAdmin();
    }
  }
}